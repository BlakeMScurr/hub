tenets:
  - bots:
      codelingo/review:
        comments: Please use `=== null` rather than `is_null`
    name: null-check
    doc: Finds all calls to null-check
    query: |
      import codelingo/ast/php
  
      # Find variables from http request
      # TODO: verify that this handles a route - route comment has no syntactic element
      php.element({depth: any}):
        php.expr_assign:
          php.expr_variable:
            name: $httpVariable
          php.expr_methodcall({depth: any}): # PHP surprisingly appears to have objects hanging off method calls
            name: "get"
            php.expr_propertyfetch:
              name: "request"
        php.expr_staticcall:
          php.arg:
            php.expr_variable: 
              name: $httpVariable
          name: $modelMethodName

      # Collect argument name
      php.stmt_class({depth: any}): # TODO: extends Util\DB\Model (missing AST element)
        php.stmt_classmethod:
          name: $modelMethodName
          php.param:
            name: $argument

          # Trace value of argument through assignment statements
          php.expr_assign:
            php.expr_variable:
              name: $intermediaryVar
            php.expr_variable({depth: any}):
              name: $argument

          php.expr_assign:
            php.expr_variable:
              name: $concattedVar
            php.expr_variable({depth: any}):
              name: $intermediaryVar

          # Find concatenation into final variable
          php.expr_assignop_concat:
            php.expr_variable:
              name: $sqlStatement
              # the request variable may be nested inside further concatenations
              php.expr_variable({depth: any}):
                name: $concattedVar

          # Calls to a method that will call the database
          @ review.comment
          php.expr_staticcall:
            php.arg:
              php.expr_variable:
                name: $sqlStatement
            name: $dbmethod

      php.stmt_namespace:
        php.name: "Util\DB"
        php.stmt_class:
          name: Model
          php.stmt_classmethod:
            name: $dbmethod
